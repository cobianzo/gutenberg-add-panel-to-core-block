{"version":3,"file":"index.js","mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;CAEA;;AACA;AAEA,MAAMQ,iBAAiB,GAAG,sBAA1B;;AAEA,MAAMC,UAAU,GAAKC,SAAF,IAAiB;EACnC,OAASC,KAAF,IAAa;IAAA;;IACnB;IACA,MAAM;MAAEC,UAAF;MAAcC;IAAd,IAAuBF,KAA7B;IACA,MAAMG,iBAAiB,GAAGD,IAAI,KAAK,aAAnC;IACA,IAAK,CAAEC,iBAAP,EAA2B,OAAO,kEAAC,SAAD,EAAgBH,KAAhB,CAAP,CAJR,CAI2C;;IAC9D,MAAM;MAAEI;IAAF,IAAgBH,UAAtB,CALmB,CAOnB;;IACA,MAAM,CAAEI,SAAF,EAAaC,YAAb,IAA8BX,4DAAQ,0BAC3CM,UAAU,CAACG,SADgC,0DAC3C,sBAAsBG,QAAtB,CAAgCV,iBAAhC,CAD2C,CAA5C,CARmB,CAYnB;;IACAD,6DAAS,CAAE,MAAM;MAChBY,eAAe;IACf,CAFQ,EAEN,CAAEH,SAAF,CAFM,CAAT;;IAGA,SAASG,eAAT,GAA2B;MAC1B;MACA,IAAIC,YAAY,GAAGL,SAAnB;;MACA,IAAKC,SAAS,IAAI,CAAED,SAAS,CAACG,QAAV,CAAoBV,iBAApB,CAApB,EAA8D;QAC7DY,YAAY,GAAGL,SAAS,GAAG,GAAZ,GAAkBP,iBAAjC;MACA,CAFD,MAEO;QACN,IAAK,CAAEQ,SAAF,IAAeD,SAAS,CAACG,QAAV,CAAoBV,iBAApB,CAApB,EAA8D;UAC7D;UACAY,YAAY,GAAGL,SAAS,CACtBM,OADa,CACJb,iBADI,EACe,EADf,EAEbc,IAFa,EAAf;QAGA;MACD,CAZyB,CAa1B;;;MACAX,KAAK,CAACY,aAAN,CAAqB;QACpBR,SAAS,EAAEK;MADS,CAArB;IAGA,CAjCkB,CAmCnB;;;IACAb,6DAAS,CAAE,MAAM;MAAA;;MAChBU,YAAY,2BAAEL,UAAU,CAACG,SAAb,2DAAE,uBAAsBG,QAAtB,CAAgCV,iBAAhC,CAAF,CAAZ;IACA,CAFQ,EAEN,CAAEI,UAAU,CAACG,SAAb,CAFM,CAAT;IAIA,OACC,kIACC,kEAAC,SAAD,EAAgBJ,KAAhB,CADD,EAEC,kEAAC,sEAAD,QACC,kEAAC,4DAAD;MAAW,KAAK,EAAC;IAAjB,GACC,kEAAC,gEAAD;MACC,KAAK,EAAC,uBADP;MAEC,IAAI,EAAGK,SAAS,GAAG,KAAH,GAAW,IAF5B;MAGC,OAAO,EAAGA,SAHX;MAIC,QAAQ,EAAKQ,GAAF,IAAWP,YAAY,CAAEO,GAAF;IAJnC,EADD,CADD,CAFD,CADD;EAeA,CAvDD;AAwDA,CAzDD;;AA0DAvB,2DAAS,CACR,kBADQ,EAER,mCAFQ,EAGRQ,UAHQ,CAAT;AAMAT,2DAAQ,CAAE,MAAM;EACfyB,KAAK,CAAE,UAAF,CAAL;AACA,CAFO,CAAR,C","sources":["webpack://js/./src/editor.scss","webpack://js/external window [\"wp\",\"blockEditor\"]","webpack://js/external window [\"wp\",\"blocks\"]","webpack://js/external window [\"wp\",\"components\"]","webpack://js/external window [\"wp\",\"domReady\"]","webpack://js/external window [\"wp\",\"element\"]","webpack://js/external window [\"wp\",\"hooks\"]","webpack://js/webpack/bootstrap","webpack://js/webpack/runtime/compat get default export","webpack://js/webpack/runtime/define property getters","webpack://js/webpack/runtime/hasOwnProperty shorthand","webpack://js/webpack/runtime/make namespace object","webpack://js/./src/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"domReady\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"hooks\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './editor.scss';\nimport domReady from '@wordpress/dom-ready';\nimport { addFilter } from '@wordpress/hooks';\nimport { InspectorControls } from '@wordpress/block-editor';\nimport { PanelBody, ToggleControl } from '@wordpress/components';\nimport { unregisterBlockType } from '@wordpress/blocks';\n// react hook\nimport { useState, useEffect } from '@wordpress/element';\n\nconst classNameToToggle = 'cob-this-is-my-class';\n\nconst modifyEdit = ( BlockEdit ) => {\n\treturn ( props ) => {\n\t\t// init variables\n\t\tconst { attributes, name } = props;\n\t\tconst isCoreButtonBlock = name === 'core/button';\n\t\tif ( ! isCoreButtonBlock ) return <BlockEdit { ...props } />; // escape for any block except core/button\n\t\tconst { className } = attributes;\n\n\t\t// init state\n\t\tconst [ toggledOn, setToggledOn ] = useState(\n\t\t\tattributes.className?.includes( classNameToToggle )\n\t\t);\n\n\t\t// Watch\n\t\tuseEffect( () => {\n\t\t\tupdateClassName();\n\t\t}, [ toggledOn ] );\n\t\tfunction updateClassName() {\n\t\t\t// This function updates the attribute depending on the toggle control\n\t\t\tlet newClassName = className;\n\t\t\tif ( toggledOn && ! className.includes( classNameToToggle ) ) {\n\t\t\t\tnewClassName = className + ' ' + classNameToToggle;\n\t\t\t} else {\n\t\t\t\tif ( ! toggledOn && className.includes( classNameToToggle ) ) {\n\t\t\t\t\t// not toggled - remove class\n\t\t\t\t\tnewClassName = className\n\t\t\t\t\t\t.replace( classNameToToggle, '' )\n\t\t\t\t\t\t.trim();\n\t\t\t\t}\n\t\t\t}\n\t\t\t// update the className.\n\t\t\tprops.setAttributes( {\n\t\t\t\tclassName: newClassName,\n\t\t\t} );\n\t\t}\n\n\t\t// for total sync we can watch if the user updates manually the  Advanced > Class input.\n\t\tuseEffect( () => {\n\t\t\tsetToggledOn( attributes.className?.includes( classNameToToggle ) );\n\t\t}, [ attributes.className ] );\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<BlockEdit { ...props } />\n\t\t\t\t<InspectorControls>\n\t\t\t\t\t<PanelBody title=\"Custom Panel\">\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel=\"Should text be shown?\"\n\t\t\t\t\t\t\thelp={ toggledOn ? 'Yes' : 'No' }\n\t\t\t\t\t\t\tchecked={ toggledOn }\n\t\t\t\t\t\t\tonChange={ ( val ) => setToggledOn( val ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</InspectorControls>\n\t\t\t</>\n\t\t);\n\t};\n};\naddFilter(\n\t'editor.BlockEdit',\n\t'cob/add-panel-to-button-component',\n\tmodifyEdit\n);\n\ndomReady( () => {\n\talert( 'domready' );\n} );\n"],"names":["domReady","addFilter","InspectorControls","PanelBody","ToggleControl","unregisterBlockType","useState","useEffect","classNameToToggle","modifyEdit","BlockEdit","props","attributes","name","isCoreButtonBlock","className","toggledOn","setToggledOn","includes","updateClassName","newClassName","replace","trim","setAttributes","val","alert"],"sourceRoot":""}